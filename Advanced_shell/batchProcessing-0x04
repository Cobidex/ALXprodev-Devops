#!/bin/bash

# Directory to store JSON files
output_dir="pokemon_data"
mkdir -p "$output_dir"

# List of Pokémon to fetch data for
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# API base URL
api_base_url="https://pokeapi.co/api/v2/pokemon"

# Function to fetch data for a single Pokémon
fetch_pokemon() {
  local pokemon_name=$1
  local retries=3
  local delay=2

  # Make the API request with retry logic
  for ((i=1; i<=retries; i++)); do
    response=$(curl -s -w "%{http_code}" -o "$output_dir/${pokemon_name,,}.json" "$api_base_url/${pokemon_name,,}")
    http_code=${response: -3}

    if [[ $http_code -eq 200 ]]; then
      echo "Fetched data for $pokemon_name."
      return 0
    else
      echo "Failed to fetch $pokemon_name (Attempt $i of $retries). Retrying in $delay seconds..."
      sleep $delay
    fi
  done

  echo "Failed to fetch $pokemon_name after $retries attempts."
  return 1
}

# Start fetching Pokémon in parallel
echo "Starting parallel Pokémon data retrieval..."
for pokemon in "${pokemon_list[@]}"; do
  fetch_pokemon "$pokemon" &
done

# List running background jobs
echo "Active background jobs:"
jobs

# Wait for all background jobs to complete
wait

# Check for any running background jobs and terminate them if necessary
if [[ $(jobs -r | wc -l) -gt 0 ]]; then
  echo "Terminating remaining background jobs..."
  kill $(jobs -p)
fi

echo "Data retrieval complete. JSON files are stored in the '$output_dir' directory."
