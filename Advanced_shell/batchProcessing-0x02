#!/bin/bash

pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

base_url="https://pokeapi.co/api/v2/pokemon"

# Maximum number of retries for each API request
max_retries=3

# Function to fetch Pokémon data with retries
fetch_pokemon_data() {
  local pokemon=$1
  local retries=0
  local success=false

  # Format Pokémon name to lowercase for the API URL
  pokemon_lower=$(echo "$pokemon" | awk '{print tolower($0)}')

  while [[ $retries -lt $max_retries ]]; do
    echo "Fetching data for $pokemon (Attempt $((retries + 1))/$max_retries)..."
    
    response=$(curl -s -w "%{http_code}" -o "$pokemon_lower.json" "$base_url/$pokemon_lower")
    http_code=${response:(-3)} # Extract HTTP status code
    response_body=$(cat "$pokemon_lower.json")
    
    if [[ $http_code -eq 200 ]]; then
      echo "Data for $pokemon successfully retrieved and saved to $pokemon_lower.json."
      success=true
      break
    else
      echo "Failed to fetch data for $pokemon. HTTP Code: $http_code"
      retries=$((retries + 1))
      sleep 2
    fi
  done

  if [[ $success == false ]]; then
    echo "Error: Unable to fetch data for $pokemon after $max_retries attempts. Skipping..."
    rm -f "$pokemon_lower.json"
    echo "$pokemon: Failed after $max_retries attempts." >> error_log.txt
  fi
}

# Iterate through the Pokémon list
for pokemon in "${pokemon_list[@]}"; do
  fetch_pokemon_data "$pokemon"
done

echo "Data retrieval completed. Check 'error_log.txt' for any failed requests."
